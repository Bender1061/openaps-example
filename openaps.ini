[alias]
rm-warmup = ! bash -c "rm -f model.json monitor/clock.json > /dev/null"
warmup = report invoke model.json raw-pump/clock-raw.json monitor/clock.json
fail-warmup = ! bash -c "echo PREFLIGHT FAIL; exit 1"
preflight = ! bash -c "(echo PREFLIGHT ) && openaps warmup 2>&1 >/dev/null && grep -q T monitor/clock.json && echo PREFLIGHT OK || openaps fail-warmup"
monitor-cgm = report invoke raw-cgm/glucose-raw.json monitor/glucose.json
monitor-pump-history = report invoke raw-pump/pump-history-raw.json monitor/pump-history.json
get-basal-status = report invoke monitor/temp-basal-status.json
get-pump-details = report invoke monitor/reservoir.json monitor/status.json monitor/battery.json
get-settings = report invoke raw-pump/bg-targets-raw.json settings/bg-targets.json raw-pump/insulin-sensitivities-raw.json settings/insulin-sensitivities.json raw-pump/selected-basal-profile.json raw-pump/settings.json settings/selected-basal-profile.json settings/settings.json
gather-pump-data = ! bash -c "openaps get-basal-status; openaps get-pump-details; openaps monitor-pump-history;  openaps get-settings"
gather-clean-data = ! bash -c "openaps monitor-cgm && openaps gather-pump-data"
do-oref0 = report invoke oref0-monitor/profile.json oref0-monitor/iob.json oref0-predict/oref0.json
enact-oref0 = report invoke oref0-enacted/enacted-temp-basal.json
do-everything = ! bash -c "(openaps preflight && openaps gather-clean-data && openaps do-oref0 && openaps enact-oref0);  openaps report-nightscout"
ping = ! bash -c "echo PONG! $*" --
pong = ! echo PONG
hello = ! echo hello
okbar = ! bash -c "echo $1" --
report-nightscout = report invoke nightscout/preflight.json nightscout/recent-treatments.json nightscout/uploaded.json nightscout/recent-missing-entries.json nightscout/uploaded-entries.json nightscout/openaps-status.json

[vendor "mmeowlink.vendors.mmeowlink"]
path = .
module = mmeowlink.vendors.mmeowlink

[vendor "openxshareble"]
path = .
module = openxshareble

[vendor "openapscontrib.timezones"]
path = .
module = openapscontrib.timezones

[schedule "main"]
phases = 
rrule = RRULE:FREQ=MINUTELY;INTERVAL=1

[schedule "do-everything"]
phases = 
rrule = RRULE:FREQ=MINUTELY;INTERVAL=1

[device "pump"]
vendor = mmeowlink.vendors.mmeowlink
extra = pump.ini

[device "oref0"]
vendor = openaps.vendors.process
extra = oref0.ini

[device "get-profile"]
vendor = openaps.vendors.process
extra = get-profile.ini

[device "calculate-iob"]
vendor = openaps.vendors.process
extra = calculate-iob.ini

[device "determine-basal"]
vendor = openaps.vendors.process
extra = determine-basal.ini

[device "tz"]
vendor = openapscontrib.timezones
extra = tz.ini

[device "units"]
vendor = openaps.vendors.units
extra = units.ini

[device "cgm"]
vendor = openxshareble
extra = cgm.ini

[report "settings/settings.json"]
device = oref0
use = shell
reporter = JSON
remainder = copy-fresher raw-pump/settings.json
json_default = True

[report "raw-pump/bg-targets-raw.json"]
device = pump
use = read_bg_targets
reporter = JSON

[report "settings/bg-targets.json"]
device = units
to = mg/dL
use = bg_targets
input = raw-pump/bg-targets-raw.json
reporter = JSON

[report "raw-pump/insulin-sensitivities-raw.json"]
device = pump
use = read_insulin_sensitivities
reporter = JSON

[report "settings/insulin-sensitivities.json"]
device = units
to = mg/dL
use = insulin_sensitivities
input = raw-pump/insulin-sensitivities-raw.json
reporter = JSON

[report "settings/selected-basal-profile.json"]
device = oref0
use = shell
reporter = JSON
remainder = copy-fresher raw-pump/selected-basal-profile.json
json_default = True

[report "raw-pump/clock-raw.json"]
device = pump
use = read_clock
reporter = JSON

[report "monitor/clock.json"]
use = clock
reporter = JSON
astimezone = False
date = None
adjust = missing
timezone = 
device = tz
input = raw-pump/clock-raw.json

[report "monitor/temp-basal-status.json"]
device = pump
use = read_temp_basal
reporter = JSON

[report "raw-pump/pump-history-raw.json"]
hours = 8.0
device = pump
use = iter_pump_hours
reporter = JSON

[report "monitor/pump-history.json"]
use = rezone
reporter = JSON
astimezone = False
date = timestamp dateString start_at end_at created_at
adjust = missing
timezone = 
device = tz
input = raw-pump/pump-history-raw.json

[report "model.json"]
device = pump
use = model
reporter = JSON

[report "monitor/reservoir.json"]
device = pump
use = reservoir
reporter = JSON

[report "monitor/status.json"]
device = pump
use = read_status
reporter = JSON

[report "monitor/battery.json"]
device = pump
use = read_battery_status
reporter = JSON

[report "oref0-monitor/profile.json"]
insulin-sensitivities = settings/insulin-sensitivities.json
use = shell
settings = settings/settings.json
reporter = text
json_default = True
device = get-profile
bg-targets = settings/bg-targets.json
basal-profile = settings/selected-basal-profile.json
max-iob = max-iob.json
remainder = 

[report "oref0-monitor/iob.json"]
use = shell
clock = monitor/clock.json
reporter = text
json_default = True
pump-history = monitor/pump-history.json
oref0-profile = oref0-monitor/profile.json
device = calculate-iob
remainder = 

[report "oref0-predict/oref0.json"]
use = shell
temp-basal = monitor/temp-basal-status.json
oref0-iob = oref0-monitor/iob.json
reporter = text
json_default = True
oref0-profile = oref0-monitor/profile.json
device = determine-basal
remainder = 
glucose = monitor/glucose.json

[report "oref0-enacted/enacted-temp-basal.json"]
device = pump
input = oref0-predict/oref0.json
use = set_temp_basal
reporter = JSON

[report "monitor/glucose-raw.json"]
count = 20
device = cgm
use = iter_glucose
reporter = JSON

[report "cgm-vendor.json"]
device = cgm
use = GetFirmwareHeader
reporter = JSON

[trigger "DoPing"]
then = 

[trigger "ping"]
then = pong

[trigger "pong"]
then = 

[device "pong"]
vendor = openaps.vendors.process
extra = pong.ini

[report "blah.txt"]
use = shell
reporter = text
json_default = False
thing = foo
device = pong
remainder = bar

[vendor "pancreabble"]
path = .
module = pancreabble

[device "pebble"]
vendor = pancreabble
extra = pebble.ini

[report "raw-pump/settings.json"]
device = pump
use = read_settings
reporter = JSON

[report "raw-pump/selected-basal-profile.json"]
device = pump
use = read_selected_basal_profile
reporter = JSON

[report "raw-pump/temp-basal-status.json"]
device = pump
use = read_temp_basal
reporter = JSON

[report "raw-pump/reservoir.json"]
device = pump
use = reservoir
reporter = JSON

[report "raw-pump/status.json"]
device = pump
use = read_status
reporter = JSON

[report "raw-pump/battery.json"]
device = pump
use = read_battery_status
reporter = JSON

[report "raw-cgm/glucose-raw.json"]
count = 20
device = cgm
use = oref0_glucose
reporter = JSON
threshold = 100
hours = 2.0

[device "fake-cgm"]
vendor = openaps.vendors.process
extra = fake-cgm.ini

[device "fake-foo"]
vendor = openaps.vendors.process
extra = fake-foo.ini

[device "ns"]
vendor = openaps.vendors.process
extra = ns.ini

[report "nightscout/recent-treatments.json"]
oper = format-recent-history-treatments
use = shell
reporter = JSON
json_default = True
device = ns
remainder = monitor/pump-history.json model.json

[report "nightscout/uploaded.json"]
oper = upload-non-empty-treatments
use = shell
reporter = JSON
json_default = True
device = ns
remainder = nightscout/recent-treatments.json

[device "badcgm"]
vendor = openaps.vendors.dexcom
extra = badcgm.ini

[device "speak-laugh"]
vendor = openaps.vendors.process
extra = speak-laugh.ini

[report "monitor/glucose.json"]
use = rezone
reporter = JSON
astimezone = True
date = timestamp dateString start_at end_at created_at system_time display_time
adjust = missing
input = raw-cgm/glucose-raw.json
device = tz
timezone = 

[report "raw-cgm/entries.json"]
use = oref0_glucose
no_raw = True
reporter = JSON
hours = 1.0
threshold = 100
device = cgm
sensor = sensor_raw.json
glucose = raw-cgm/glucose-raw.json

[report "nightscout/recent-missing-entries.json"]
oper = format-recent-type
use = shell
reporter = JSON
json_default = True
device = ns
remainder = tz entries monitor/glucose.json

[report "nightscout/uploaded-entries.json"]
oper = upload-non-empty-type
use = shell
reporter = JSON
json_default = True
device = ns
remainder = entries.json nightscout/recent-missing-entries.json

[report "nightscout/preflight.json"]
oper = preflight
use = shell
reporter = JSON
json_default = True
device = ns
remainder = 

[report "raw-pump/carb-ratios.json"]
device = pump
use = read_carb_ratios
reporter = JSON

[trigger "FoundGlucose"]
then = do-everything

[trigger "CustomTrigger"]
then = ping hello jason

[device "clean-nightscout-glucose"]
vendor = openaps.vendors.process
extra = clean-nightscout-glucose.ini

[report "raw-cgm/calibrations.json"]
device = cgm
count = 4
use = iter_calibrations
reporter = JSON

[device "ns-status"]
vendor = openaps.vendors.process
extra = ns-status.ini

[report "nightscout/openaps-status.json"]
device = ns-status
remainder = monitor/clock.json oref0-monitor/iob.json oref0-predict/oref0.json oref0-enacted/enacted-temp-basal.json monitor/battery.json monitor/reservoir.json monitor/status.json
use = shell
json_default = True
reporter = JSON

[report "nightscout/uploaded-recent-devicestatus.json"]
oper = upload
use = shell
reporter = JSON
json_default = True
device = ns
remainder = devicestatus.json nightscout/openaps-status.json

